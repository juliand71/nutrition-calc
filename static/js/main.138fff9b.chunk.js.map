{"version":3,"sources":["Nutrition.js","reducers/currentPatient.js","conditions.js","reducers/currentConditions.js","reducers/currentAmputations.js","reducers/index.js","pals.js","actions/index.js","actions/patientActions.js","actions/conditionActions.js","actions/amputationActions.js","components/ConditionSelect.js","components/AmputationSelect.js","components/PatientForm.jsx","components/MifflinCard.jsx","components/HarrisBenedictCard.jsx","components/KCalCard.jsx","components/TitleBar.jsx","components/NutritionTable.jsx","components/BMICard.jsx","components/App.jsx","index.js"],"names":["AmputatedPercentage","amputations","amputationP","rightFoot","rightCalf","rightLeg","leftFoot","leftCalf","leftLeg","roundTwoDecimal","value","Math","round","Nutrition","calculateMifflin","patient","age","weightKG","heightCM","gender","calculateBMI","meters","console","log","ampct","calculateHB","calculateIDW","idw","heightIN","overSixty","convertUnits","unit","unitName","unitValue","undefined","convertedUnit","convertedValue","assert","require","currentPatient","state","weightLB","pal","action","type","payload","lbconversion","kgconversion","inconversion","cmconversion","conditions","name","calDesc","protDesc","remarks","findConditionByName","conditionArray","c","currentConditions","current","item","newCondition","push","initialState","currentAmputations","newAmps","Object","assign","rightFOot","leftFOot","rootReducer","combineReducers","pals","label","allActions","patientActions","setPatient","setAge","setGender","setWeightKG","weight","setWeightLB","setHeightCM","height","setHeightIN","setPAL","conditionActions","setConditions","conditionList","amputationActions","setAmputations","ConditionSelect","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","getStyles","conditionName","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","classes","makeStyles","formControl","margin","spacing","minWidth","maxWidth","chips","display","flexWrap","chip","noLabel","marginTop","useStyles","useTheme","dispatch","useSelector","useDispatch","React","useState","selectedConditions","setSelectedConditions","FormControl","className","InputLabel","id","Select","labelId","multiple","onChange","event","target","input","Input","renderValue","selected","map","condition","Chip","key","MenuItem","AmputationSelect","updateAmputations","checked","FormGroup","FormControlLabel","control","Checkbox","PatientForm","drawer","flexShrink","drawerPaper","inputGroup","marginBottom","conversionInput","ageInput","palLabel","palInput","marginLeft","Drawer","variant","anchor","paper","component","FormLabel","RadioGroup","aria-label","currentTarget","Radio","TextField","InputLabelProps","shrink","Typography","gutterBottom","Slider","min","max","defaultValue","aria-labelledby","step","marks","valueLabelDisplay","newValue","MifflinCard","root","cardTitle","equation","fontStyle","result","Card","CardContent","HarrisBenedictCard","KCalCard","slider","kcalkg","setKcalkg","protein","setProtein","TitleBar","appBar","zIndex","AppBar","position","Toolbar","noWrap","NutritionTable","props","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","cond","i","BMICard","drawerWidth","heightM","estWeightKG","BMIequationString","ibwStr","reduceBy","concat","IBWequationString","App","cardSection","tableSection","titleBar","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.138fff9b.chunk.js","sourcesContent":["/*\n*\n*/\nfunction calculateMifflin(patient) {\n  const {\n    age,\n    weightKG,\n    heightCM,\n    gender\n  } = patient;\n  if (gender === \"male\") {\n    return roundTwoDecimal(10 * weightKG + 6.25 * heightCM - 5 * age + 5);\n  } else {\n    return roundTwoDecimal(10 * weightKG + 6.25 * heightCM - 5 * age + -161);\n  }\n}\n\n/*\n*\n*/\nfunction calculateHB(patient) {\n  const {\n    age,\n    weightKG,\n    heightCM,\n    gender\n  } = patient;\n\n  if (gender === \"male\") {\n    return roundTwoDecimal(66.47 + 13.75 * weightKG + 5 * heightCM - 6.75 * age);\n  } else {\n    return roundTwoDecimal(655.1 + 9.56 * weightKG + 1.85 * heightCM - 4.68 * age);\n  }\n}\n\nfunction AmputatedPercentage(amputations) {\n  var amputationP = 0;\n  if (amputations.rightFoot) {\n    amputationP += 0.015;\n    if (amputations.rightCalf) {\n      amputationP += 0.044;\n      if (amputations.rightLeg) {\n        amputationP += 0.0101;\n      }\n    }\n  }\n  if (amputations.leftFoot) {\n    amputationP += 0.015;\n    if (amputations.leftCalf) {\n      amputationP += 0.044;\n      if (amputations.leftLeg) {\n        amputationP += 0.0101;\n      }\n    }\n  }\n\n  return amputationP;\n}\n\n/*\n*\n*/\nfunction calculateBMI(patient, amputations) {\n  const {\n    heightCM,\n    weightKG\n  } = patient;\n  const meters = heightCM / 100;\n  console.log(amputations)\n  const ampct = AmputatedPercentage(amputations);\n  if (ampct > 0.0){\n    // patient has amputations to consider\n    // estimated body weight = observed body weight(after amputations) divided by  one minus the percentage amputated squared\n    // user will have to enter the height, since that is potentially affected by amputation\n    const wte = weightKG / (1 - ampct);\n    return roundTwoDecimal(wte / (meters * meters));\n  }\n  return roundTwoDecimal(weightKG / (meters * meters));\n}\n\n/*\n*\n*/\nfunction calculateIDW(patient, amputations) {\n  const {\n    gender,\n    heightIN\n  } = patient;\n\n  // use math.round to ensure we get a whole number\n  const overSixty = Math.round(heightIN) - 60;\n  const ampct = AmputatedPercentage(amputations);\n  var idw;\n  if (overSixty <= 0) {\n    if (gender === 'male') {\n      idw = 106;\n    } else {\n      idw = 100;\n    }\n\n    if (ampct > 0.0){\n      // patient has amputations to consider\n      // ideal weight is reduced by percentage calculated above\n      return idw - (idw * ampct)\n    }\n    return idw;\n  }\n\n  \n  if (gender === 'male') {\n    idw = (106 + (6 * overSixty));\n  } else {\n    idw =  (100 + (5 * overSixty));\n  }\n  if (ampct > 0.0){\n    // patient has amputations to consider\n    // ideal weight is reduced by percentage calculated above\n    return idw - (idw * ampct);\n\n  }\n  return idw;\n\n\n}\n\n/*\n*\n*/\nfunction convertUnits(unit, value) {\n  var unitName, unitValue;\n\n  if (unit === \"heightIN\") {\n    unitName = \"heightCM\";\n    unitValue = roundTwoDecimal(value * 2.54);\n  } else if (unit === \"heightCM\") {\n    unitName = \"heightIN\";\n    unitValue = roundTwoDecimal(value / 2.54);\n  } else if (unit === \"weightKG\") {\n    unitName = \"weightLB\";\n    unitValue = roundTwoDecimal(value * 2.2);\n  } else if (unit === \"weightLB\") {\n    unitName = \"weightKG\";\n    unitValue = roundTwoDecimal(value /  2.2);\n  } else {\n    unitName = undefined;\n    unitValue = undefined;\n  }\n\n  return {\n    convertedUnit: unitName,\n    convertedValue: unitValue,\n  };\n}\n\n/*\n*\n*/\nfunction roundTwoDecimal(value) {\n  return Math.round(value * 100) / 100;\n}\n\n/*\n*\n*/\nconst Nutrition = {\n  calculateMifflin: calculateMifflin,\n  AmputatedPercentage: AmputatedPercentage,\n  calculateBMI: calculateBMI,\n  calculateHB: calculateHB,\n  calculateIDW: calculateIDW,\n  convertUnits: convertUnits,\n  roundTwoDecimal: roundTwoDecimal\n};\n\n/*\n*\n*/\nexport default Nutrition;\nexport {\n  AmputatedPercentage,\n  calculateIDW,\n  calculateMifflin,\n  calculateBMI,\n  calculateHB,\n  convertUnits,\n  roundTwoDecimal\n};","import Nutrition from \"../Nutrition\";\nvar assert = require(\"assert\");\n\nconst currentPatient = (state={\n  gender: 'female',\n  age: 18,\n  weightKG: 45.35,\n  weightLB: 100,\n  heightCM: 152.4,\n  heightIN: 60,\n  pal: 1.7,\n}, action) => {\n  switch (action.type) {\n    case \"SET_AGE\":\n      return {\n        ...state,\n        age: action.payload\n      }\n    case \"SET_GENDER\":\n      return {\n        ...state,\n        gender: action.payload\n      }\n    case \"SET_KG\":\n      let lbconversion = Nutrition.convertUnits(\"weightKG\", action.payload);\n      assert(lbconversion.convertedUnit === \"weightLB\");\n      return {\n        ...state,\n        weightKG: action.payload,\n        weightLB: lbconversion.convertedValue,\n      }\n    case \"SET_LB\":\n      let kgconversion = Nutrition.convertUnits(\"weightLB\", action.payload);\n      assert(kgconversion.convertedUnit === \"weightKG\");\n      return {\n        ...state,\n        weightLB: action.payload,\n        weightKG: kgconversion.convertedValue\n      }\n    case \"SET_CM\":\n      let inconversion = Nutrition.convertUnits(\"heightCM\", action.payload);\n      assert(inconversion.convertedUnit === \"heightIN\");\n      return {\n        ...state,\n        heightCM: action.payload,\n        heightIN: inconversion.convertedValue\n      }\n    case \"SET_IN\":\n      let cmconversion = Nutrition.convertUnits(\"heightIN\", action.payload);\n      assert(cmconversion.convertedUnit === \"heightCM\");\n      return {\n        ...state,\n        heightIN: action.payload,\n        heightCM: cmconversion.convertedValue\n      }\n    case \"SET_PAL\":\n      return {\n        ...state,\n        pal: action.payload\n      }\n    default:\n      return state;\n  }\n}\n\nexport default currentPatient;","const conditions = [\n  {\n    name: 'AKI',\n    calDesc: '20 - 30 kcal / kg actual weight \\n 25 - 30 kcal / kg non obese critical care',\n    protDesc: 'no dialysis 0.8 - 1.0 g / kg actual weight \\ndialysis or catabolic 1.0 - 1.5 g / kg actual weight \\nreceiving CRRT 1.5 - 1.7 g / kg suggested wieght \\ncritical care or hypermetabolic 1.5 - 1.7 g / kg actual weight',\n    remarks: '',\n  },\n \n  {\n    name: 'CABG',\n    calDesc: 'Mifflin x PAL',\n    protDesc: '0.8 - 1.0 g / kg for maintenance\\n1.2 - 2.0 g/kg actual weight in critical illness',\n    remarks: '',\n  },\n  {\n    name: 'Cancer',\n    calDesc: 'Mifflin x PAL',\n    protDesc: '1.0 - 1.2 kg current weight',\n    remarks: 'varies depending on type of cancer',\n  },\n  {\n    name: 'CHF',\n    calDesc: '22 kcal / kg',\n    protDesc: '1.1 g / kg',\n    remarks: '',\n  },\n  {\n    name: 'CHF - malnourished',\n    calDesc: '24 kcal / kg',\n    protDesc: '1.4 g / kg',\n    remarks: 'consider need for weight loss or gain with calorie needs. Add PAL factor as needed.',\n  },\n  {\n    name: 'COPD',\n    calDesc: 'predictive based on level of care - 25 - 35 kcal / kg',\n    protDesc: '15 - 20% of total calories',\n    remarks: '',\n  },\n  {\n    name: 'COPD - Moderate Stress',\n    calDesc: 'predictive based on level of care - 25 - 35 kcal / kg',\n    protDesc: '1 - 1.5 g / kg',\n    remarks: '',\n  },\n  {\n    name: 'COPD - Severe Stress',\n    calDesc: 'predictive based on level of care - 25 - 35 kcal / kg',\n    protDesc: '1.6 - 2 g / kg',\n    remarks: '',\n  },\n  {\n    name: 'Critical Care - VENT - NONOBESE',\n    calDesc: 'Penn State 2003b',\n    protDesc: '1.2 - 2.0 g / kg actual weight',\n    remarks: 'permissive underfeeding for tube feeding',\n  },\n  {\n    name: 'Critical Care - VENT - OBESE',\n    calDesc: 'Penn State 2003b if less than 60 years old, if older than 60 Penn State 2010',\n    protDesc: '2.0+ g / kg if BMI is 30-40, 2.5+ g / kg if BMI > 40',\n    remarks: 'permissive underfeeding for tube feeding',\n  },\n  {\n    name: 'Critical Care - NONVENT',\n    calDesc: 'Mifflin x 1.25',\n    protDesc: '1.2 - 2.0 g / kg',\n    remarks: 'permissive underfeeding for tube feeding',\n  },\n\n  {\n    name: 'Obese NONVENT',\n    calDesc: 'Mifflin using actual weight (no PAL)',\n    protDesc: 'non critical 0.8 - 1.0 g / kg actual weight',\n    remarks: '',\n  },\n  {\n    name: 'Obese VENT',\n    calDesc: 'if age > 60 PSU 2010, if < 60 PSU 2003',\n    protDesc: 'critically care ICU: 2.0+ g / kg ideal weight, if BMI > 40 2.5+ g / kg',\n    remarks: '',\n  },\n  {\n    name: 'DM',\n    calDesc: 'Mifflin x PAL',\n    protDesc: '15-20% daily energy intake, 1.0 - 1.5 g / kg with wounds or malnutrition',\n    remarks: '',\n  },\n  {\n    name: 'Dysphagia',\n    calDesc: 'Mifflin x PAL',\n    protDesc: '0.8 - 1.0 g / kg actual weight',\n    remarks: '',\n  },\n  {\n    name: 'Gestational DM',\n    calDesc: 'desirable body weight: 13.6 kcal/lb. 120%+ desirable weight: 10.9 kcal/lb. less than 90% desirable weight: 18.2 kcal/lb',\n    protDesc: '1.1 g/kg current weight. 0.8 g/kg pre-preg weight + 25g (50g for twins) in 2nd or 3rd trimester. ',\n    remarks: 'no less than 1800 kcal at any point',\n  },\n  {\n    name: 'GI Disorders',\n    calDesc: 'Mifflin x PAL',\n    protDesc: '0.8 - 1.0 g / kg actual weight for adults, 1.0 - 1.23 g/kg for older adults',\n    remarks: '',\n  },\n  {\n    name: 'HIV',\n    calDesc: 'Mifflin x PAL',\n    protDesc: '0.8 - 1.0 g / kg actual weight',\n    remarks: '',\n  },\n  {\n    name: 'Liver Disease',\n    calDesc: 'Mifflin x PAL',\n    protDesc: '0.8 - 1.0 g / kg actual weight',\n    remarks: '',\n  },\n  {\n    name: 'Pancreatitis',\n    calDesc: 'Mifflin x PAL',\n    protDesc: '1.2 - 1.5 g/kg acute, 1.0 - 1.5 g/kg chronic',\n    remarks: '',\n  },\n  {\n    name: 'Pressure Injury',\n    calDesc: 'Mifflin x PAL or 30 - 35 kcal/kg, 35 - 40 kcal/kg for underweight, 25-30 kcal/kg for obese',\n    protDesc: '1.25 - 1.5 g/kg',\n    remarks: '',\n  },\n  {\n    name: 'Pregnancy',\n    calDesc: '2200 - 2500, +340 - 452 after first trimester, +500 if twins',\n    protDesc: '1.1 g/kg current weight. 0.8 g/kg pre-preg weight + 25g (50g for twins) in 2nd or 3rd trimester. ',\n    remarks: '',\n  },\n  {\n    name: 'Underweight',\n    calDesc: 'Mifflin x PAL',\n    protDesc: 'based on disease state and condition, typically higher',\n    remarks: '',\n  },\n];\n\nexport default conditions;","import conditions from '../conditions';\n\nfunction findConditionByName(conditionArray, name) {\n  for (var c of conditionArray) {\n    console.log(c.name)\n    console.log(name)\n    if (c.name === name) {\n      return c;\n    }\n  }\n}\n\nconst currentConditions = (state=[], action) => {\n\n  switch (action.type) {\n    case \"SET_CONDITION\":\n      console.log(action.payload)\n      let current = [];\n      for (var item of action.payload) {\n        var newCondition = findConditionByName(conditions, item)\n        console.log(newCondition)\n        current.push(newCondition);\n        console.log(current)\n      }\n      return current;\n      \n    default:\n      return state;\n  }\n}\n\nexport default currentConditions;","const initialState = {\n  leftLeg: false,\n  leftCalf: false,\n  leftFoot: false,\n  rightLeg: false,\n  rightCalf: false,\n  rightFoot: false\n}\n\nconst currentAmputations = (state=initialState, action) => {\n  switch (action.type) {\n    case \"SET_AMPUTATIONS\":\n      let newAmps = Object.assign({}, action.payload);\n      if (newAmps.rightLeg) {\n        newAmps.rightCalf = true;\n        newAmps.rightFoot = true;\n      }\n      if (newAmps.rightCalf) {\n        newAmps.rightFOot = true;\n      }\n\n      if (newAmps.leftLeg) {\n        newAmps.leftCalf = true;\n        newAmps.leftFoot = true;\n      }\n      if (newAmps.leftCalf) {\n        newAmps.leftFOot = true;\n      }\n      return newAmps;\n    default:\n      return state;\n  }\n}\n\nexport default currentAmputations;","import currentPatient from \"./currentPatient\";\nimport currentConditions from './currentConditions';\nimport currentAmputations from './currentAmputations';\nimport {combineReducers} from 'redux';\n\nconst rootReducer = combineReducers({\n  currentPatient,\n  currentConditions,\n  currentAmputations,\n});\n\nexport default rootReducer;","const pals = [\n  { value: 1.2, label: \"1.2\" },\n\n  { value: 2.0, label: \"2.0\" },\n\n  { value: 2.7, label: \"2.7\" },\n];\n\nexport default pals;","import patientActions from \"./patientActions\";\nimport conditionActions from './conditionActions';\nimport amputationActions from './amputationActions';\n\nconst allActions = {\n  patientActions,\n  conditionActions,\n  amputationActions\n};\n\nexport default allActions;","const setPatient = (patient) => {\n  return {\n    type: \"SET_PATIENT\",\n    payload: patient\n  };\n}\nconst setAge = (age) => {\n  return {\n    type: \"SET_AGE\",\n    payload: age\n  };\n}\n\nconst setGender = (gender) => {\n  return {\n    type: \"SET_GENDER\",\n    payload: gender\n  };\n}\n\nconst setWeightKG = (weight) => {\n  return {\n    type: \"SET_KG\",\n    payload: weight\n  };\n}\n\nconst setWeightLB = (weight) => {\n  return {\n    type: \"SET_LB\",\n    payload: weight\n  };\n}\n\nconst setHeightCM = (height) => {\n  return {\n    type: \"SET_CM\",\n    payload: height\n  };\n}\n\nconst setHeightIN = (height) => {\n  return {\n    type: \"SET_IN\",\n    payload: height\n  };\n}\n\nconst setPAL = (pal) => {\n  return {\n    type: \"SET_PAL\",\n    payload: pal\n  };\n}\n\nexport default {\n  setPatient,\n  setAge,\n  setGender,\n  setWeightKG,\n  setWeightLB,\n  setHeightCM,\n  setHeightIN,\n  setPAL,\n}","// import conditions from '../conditions';\n\nconst setConditions = (conditionList) => {\n  return {\n    type: \"SET_CONDITION\",\n    payload: conditionList\n  }\n};\n\nexport default {\n  setConditions\n};","const setAmputations = (amputations) => {\n  return {\n    type: \"SET_AMPUTATIONS\",\n    payload: amputations\n  }\n}\n\nexport default {\n  setAmputations\n}","import React from \"react\";\nimport conditions from '../conditions';\n\nimport {\n  makeStyles,\n  useTheme\n} from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Chip from '@material-ui/core/Chip';\n\nimport {useSelector, useDispatch} from 'react-redux'\nimport allActions from \"../actions\";\n\nfunction ConditionSelect() {\n\n\n  const useStyles = makeStyles((theme) => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n      maxWidth: 300,\n    },\n    chips: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    chip: {\n      margin: 2,\n    },\n    noLabel: {\n      marginTop: theme.spacing(3),\n    },\n  }));\n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n      },\n    },\n  };\n\n  function getStyles(name, conditionName, theme) {\n    return {\n      fontWeight: conditionName.indexOf(name) === -1 ?\n        theme.typography.fontWeightRegular :\n        theme.typography.fontWeightMedium,\n    };\n  }\n\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const currentConditions = useSelector(state => state.currentConditions);\n  const dispatch = useDispatch();\n\n  const [selectedConditions, setSelectedConditions] = React.useState([]);\n\n  function updateConditions(event) {\n    setSelectedConditions(event.target.value);\n    dispatch(allActions.conditionActions.setConditions(event.target.value));\n  }\n\n  return (\n     <FormControl className = {classes.formControl} >\n      <InputLabel id = \"demo-mutiple-chip-label\">Patient Conditions</InputLabel> \n        <Select \n          labelId = \"demo-mutiple-chip-label\"\n          id = \"demo-mutiple-chip\"\n          multiple \n          value = {selectedConditions}\n          onChange = {updateConditions}\n          input = {<Input id = \"select-multiple-chip\" />}\n          renderValue = {(selected) => ( \n            <div className = {classes.chips}> \n              {selected.map((condition) => ( \n                <Chip key = {condition}\n                  label = {condition}\n                  className = {classes.chip}\n                />\n              ))}\n            </div>\n          )}\n          MenuProps = {MenuProps}\n        >\n          {conditions.map((c) => (\n            <MenuItem key={c.name} value={c.name} style={getStyles(c.name, selectedConditions, theme)}>\n              {c.name}\n            </MenuItem>\n          ))}\n        </Select> \n    </FormControl>\n  );\n}\n\nexport default ConditionSelect;","\n\nimport React from \"react\";\n\nimport {\n  makeStyles,\n  useTheme\n} from '@material-ui/core/styles';\n\n\nimport {useSelector, useDispatch} from 'react-redux'\nimport allActions from \"../actions\";\nimport { Checkbox, FormControl, FormControlLabel, FormGroup } from \"@material-ui/core\";\n\nfunction AmputationSelect() {\n\n\n  const currentAmputations = useSelector(state => state.currentAmputations);\n  const dispatch = useDispatch();\n\n  function updateAmputations(event) {\n    dispatch(allActions.amputationActions.setAmputations({ ...currentAmputations, [event.target.name]: event.target.checked }));\n  }\n\n  return (\n    <div>\n      <FormControl>\n        <FormGroup>\n          {/**\n            If the leg is amputated, so is the calf and foot, so we use the OR operator to automatically fill in the check boxes\n           */}\n          <FormControlLabel\n            control={\n              <Checkbox \n                checked={currentAmputations.leftLeg} \n                onChange={updateAmputations} \n                name=\"leftLeg\" \n              />\n            }\n            label=\"Left Leg\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox \n                checked={currentAmputations.leftCalf || currentAmputations.leftLeg} \n                onChange={updateAmputations} \n                name=\"leftCalf\" \n              />\n            }\n            label=\"Left Calf\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox \n                checked={currentAmputations.leftFoot || currentAmputations.leftCalf || currentAmputations.leftLeg} \n                onChange={updateAmputations} \n                name=\"leftFoot\"\n              />\n            }\n            label=\"Left Foot\"\n          />\n        </FormGroup>\n      </FormControl>\n      <FormControl>\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Checkbox \n                checked={currentAmputations.rightLeg} \n                onChange={updateAmputations} \n                name=\"rightLeg\"\n              />\n            }\n            label=\"Right Leg\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox \n                checked={currentAmputations.rightCalf || currentAmputations.rightLeg} \n                onChange={updateAmputations} \n                name=\"rightCalf\"\n              />\n            }\n            label=\"Right Calf\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox \n                checked={currentAmputations.rightFoot || currentAmputations.rightCalf || currentAmputations.rightLeg} \n                onChange={updateAmputations} \n                name=\"rightFoot\"\n              />\n            }\n            label=\"Right Foot\"\n          />\n        </FormGroup>\n      </FormControl>\n    </div>\n  );\n}\n\nexport default AmputationSelect;","import React from 'react';\nimport {useSelector, useDispatch} from 'react-redux'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Drawer from '@material-ui/core/Drawer';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nimport pals from '../pals';\nimport allActions from '../actions';\nimport ConditionSelect from './ConditionSelect';\nimport AmputationSelect from './AmputationSelect';\n\nconst drawerWidth = 330;\n\nfunction PatientForm() {\n  const useStyles = makeStyles(() => ({\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n      margin: ' 75px 10px',\n    },\n    inputGroup: {\n      marginBottom: '20px',\n    },\n    conversionInput: {\n\n      maxWidth: '44%',\n      margin: '0.5%'\n    },\n    ageInput: {\n      margin: '0.25%',\n      width: '90%'\n    },\n    palLabel: {\n      marginBottom: '30px'\n    },\n    palInput: {\n      width: '80%',\n      marginLeft: '8%'\n    },\n  }));\n\n  const classes = useStyles();\n\n  const currentPatient = useSelector(state => state.currentPatient);\n  const dispatch = useDispatch();\n\n  return (\n\n    <Drawer\n      variant=\"permanent\"\n      anchor=\"left\"\n      className={classes.drawer}\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n    >\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Gender</FormLabel>\n        <RadioGroup aria-label=\"gender\" name=\"gender\" value={currentPatient.gender} onChange={ (event) => dispatch(allActions.patientActions.setGender(event.currentTarget.value))}>\n          <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n          <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n        </RadioGroup>\n      </FormControl>\n\n\n      <div className={classes.inputGroup}>\n        <TextField\n          id=\"age\"\n          name=\"age\"\n          label=\"Age\"\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          variant=\"outlined\"\n          value={currentPatient.age}\n          onChange={(event) => dispatch(allActions.patientActions.setAge(event.currentTarget.value))}   \n          className={classes.ageInput}      \n        />\n      </div>\n\n      <div className={classes.inputGroup}>\n        <TextField\n          id=\"height-cm\"\n          name=\"heightCM\"\n          label=\"Height (cm)\"\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          variant=\"outlined\"\n          value={currentPatient.heightCM}\n          onChange={(event) => dispatch(allActions.patientActions.setHeightCM(event.currentTarget.value))}  \n          className={classes.conversionInput}\n        />\n        <TextField\n          id=\"height-in\"\n          name=\"heightIN\"\n          label=\"Height (in)\"\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          variant=\"outlined\"\n          value={currentPatient.heightIN}\n          onChange={(event) => dispatch(allActions.patientActions.setHeightIN(event.currentTarget.value))}  \n          className={classes.conversionInput}\n        />\n      </div>\n\n      <div className={classes.inputGroup}>\n        <TextField\n          id=\"weight-kg\"\n          name=\"weightKG\"\n          label=\"Weight (kg)\"\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          variant=\"outlined\"\n          value={currentPatient.weightKG}\n          onChange={(event) => dispatch(allActions.patientActions.setWeightKG(event.currentTarget.value))}  \n          className={classes.conversionInput}\n        />\n        <TextField\n          id=\"weight-lb\"\n          name=\"weightLB\"\n          label=\"Weight (lb)\"\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          variant=\"outlined\"\n          value={currentPatient.weightLB}\n          onChange={(event) => dispatch(allActions.patientActions.setWeightLB(event.currentTarget.value))}  \n          className={classes.conversionInput}\n        />\n      </div>\n\n      <div className={classes.inputGroup}>\n        <Typography id=\"discrete-slider-always\" gutterBottom className={classes.palLabel}>\n          PAL\n        </Typography>\n        <Slider\n          min={1.0}\n          max={2.7}\n          defaultValue={1.2}\n          value={currentPatient.pal}\n          aria-labelledby=\"discrete-slider-always\"\n          step={0.1}\n          marks={pals}\n          valueLabelDisplay=\"on\"\n          name=\"pal\"\n          onChange={(event, newValue) => dispatch(allActions.patientActions.setPAL(newValue))} \n          className={classes.palInput}\n        />\n      </div>\n      <ConditionSelect />\n      <AmputationSelect />\n    </Drawer>\n  );\n}\n\nexport default PatientForm;","import React from 'react';\n\nimport Nutrition from '../Nutrition';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/styles';\n\nimport {useSelector, useDispatch} from 'react-redux';\n\nfunction MifflinCard() {\n  const useStyles = makeStyles({\n    root: {\n      width: '400px',\n      margin: '20px',\n      display: 'flex',\n    },\n    cardTitle: {\n      fontWeight: 'bold',\n    },\n    equation: {\n      fontStyle: 'italic',\n    },\n    result: {\n      fontWeight: 'bold'\n    },\n  });\n\n  const classes = useStyles();\n  const currentPatient = useSelector(state => state.currentPatient);\n  const {age, weightKG, heightCM, gender, pal} = currentPatient\n\n  function equationString() {\n    if (gender === \"male\") {\n      return `10 * ${weightKG}kg + 6.25 * ${heightCM}cm - 5 * ${age} + 5`;\n    } else {\n      return `10 * ${weightKG}kg + 6.25 * ${heightCM}cm - 5 * ${age} -161`;\n    }\n  }\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h6\" className={classes.cardTitle}>Mifflin</Typography>\n        <Typography className={classes.equation}>\n          {equationString()} =\n        </Typography>\n        <Typography className={classes.result}>\n          {Nutrition.calculateMifflin(currentPatient)}\n        </Typography>\n        <Typography>\n          x PAL = \n        </Typography>\n        <Typography className={classes.result}>\n          {(Nutrition.calculateMifflin(currentPatient) * pal)}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default MifflinCard;","import React from 'react';\n\nimport Nutrition from '../Nutrition';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core';\n\nimport {useSelector} from 'react-redux';\n\nfunction HarrisBenedictCard() {\n  const useStyles = makeStyles({\n    root: {\n      width: '400px',\n      margin: '20px',\n      display: 'flex',\n    },\n    cardTitle: {\n      fontWeight: 'bold',\n    },\n    equation: {\n      fontStyle: 'italic',\n    },\n    result: {\n      fontWeight: 'bold'\n    },\n  });\n\n  const classes = useStyles();\n  const currentPatient = useSelector(state => state.currentPatient);\n  const {age, weightKG, heightCM, gender, pal} = currentPatient;\n\n  function equationString() {\n    if (gender === \"male\") {\n      return `66.47 + 13.75 * ${weightKG}kg + 5 * ${heightCM}cm - 6.75 * ${age}`;\n    } else {\n      return `655.1 + 9.56 * ${weightKG}kg + 1.85 * ${heightCM}cm - 4.68 * ${age}`;\n    }\n  }\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h6\" className={classes.cardTitle}>Harris Benedict</Typography>\n        <Typography className={classes.equation}>\n          {equationString()} =\n        </Typography>\n        <Typography className={classes.result}>\n          {Nutrition.calculateHB(currentPatient)}\n        </Typography>\n        <Typography>\n          x PAL = \n        </Typography>\n        <Typography className={classes.result}>\n          {(Nutrition.calculateHB(currentPatient) * pal)}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default HarrisBenedictCard;","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport { useSelector } from 'react-redux';\n\n\nfunction KCalCard() {\n  const useStyles = makeStyles({\n    root: {\n      width: '400px',\n      margin: '20px',\n      display: 'flex',\n    },\n    cardTitle: {\n      fontWeight: 'bold',\n      marginBottom: '50px'\n    },\n    slider: {\n      width: '300px'\n    },\n    equation: {\n      fontStyle: 'italic',\n    },\n    result: {\n      fontWeight: 'bold'\n    },\n  });\n\n  const classes = useStyles();\n\n  const currentPatient = useSelector(state => state.currentPatient);\n  const [kcalkg, setKcalkg] = React.useState([20, 30]);\n  const [protein, setProtein] = React.useState([1.0, 2.0]);\n\n  function handleProteinChange(event, newValue) {\n    setProtein(newValue);\n  }\n\n  function handleKcalChange(event, newValue) {\n    setKcalkg(newValue);\n  }\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h6\" className={classes.cardTitle}>kcal / kg</Typography>\n        <Slider\n          className={classes.slider}\n          min={10}\n          max={50}\n          defaultValue={20}\n          value={kcalkg}\n          aria-labelledby=\"discrete-slider-always\"\n          step={1}\n          marks={[{value: 20, label: '20'}, {value: 30, label: '30'}, {value: 40, label: '40'}]}\n          valueLabelDisplay=\"on\"\n          name=\"kcal\"\n          onChange={handleKcalChange}\n        />\n        <Typography className={classes.equation}>\n          {`${kcalkg[0]} kcal/kg`} = <span className={classes.result}>{kcalkg[0] * currentPatient.weightKG}</span>\n        </Typography>\n        <Typography className={classes.equation}>\n          {`${kcalkg[1]} kcal/kg`} = <span className={classes.result}>{kcalkg[1] * currentPatient.weightKG}</span>\n        </Typography>\n\n        <Typography variant=\"h6\" className={classes.cardTitle}>protein g / kg</Typography>\n        <Slider\n          className={classes.slider}\n          min={0.5}\n          max={3.5}\n          defaultValue={0.8}\n          value={protein}\n          aria-labelledby=\"discrete-slider-always\"\n          step={0.1}\n          marks={[{value: 1.0, label: '1.0'}, {value: 2.0, label: '2.0'}, {value: 3.0, label: '3.0'}]}\n          valueLabelDisplay=\"on\"\n          name=\"protein\"\n          onChange={handleProteinChange}\n        />\n        <Typography className={classes.equation}>\n          {`${protein[0]} g/kg`} = <span className={classes.result}>{protein[0] * currentPatient.weightKG}</span>\n        </Typography>\n        <Typography className={classes.equation}>\n          {`${protein[1]} g/kg`} = <span className={classes.result}>{protein[1] * currentPatient.weightKG}</span>\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default KCalCard;","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nfunction TitleBar() {\n  const useStyles = makeStyles(() => ({\n    appBar: {\n      zIndex: 1,\n    },\n  }));\n  const classes = useStyles();\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n    <Toolbar>\n      <Typography variant=\"h6\" noWrap>\n        Nutrition Calculation\n      </Typography>\n    </Toolbar>\n  </AppBar>\n  );\n}\n\nexport default TitleBar;","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport {useSelector, useDispatch} from 'react-redux';\n\nfunction NutritionTable(props) {\n\n  const useStyles = makeStyles({\n    root: {\n      marginTop: \"400\",\n      marginLeft: \"400\"\n    },\n  });\n\n  const classes = useStyles();\n  const currentConditions = useSelector(state => state.currentConditions);\n  return (\n    <TableContainer className={classes.root} component={Paper}>\n      <Table >\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"right\">Condition</TableCell>\n            <TableCell align=\"right\">Calories Kcal</TableCell>\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n            <TableCell align=\"right\">Remarks</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n            {currentConditions.map((cond, i) => {\n              return (\n                <TableRow key={i}>\n                  <TableCell align=\"right\">{cond.name}</TableCell>\n                  <TableCell align=\"right\">\n                    <span>{cond.calDesc}</span>\n                    <span></span>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <span>{cond.protDesc}</span>\n                    <span></span>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <span>{cond.remarks}</span>\n                    <span></span>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n\n  );\n}\n\nexport default NutritionTable;","import React from \"react\";\n\nimport Nutrition from '../Nutrition';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/styles';\n\nimport { useSelector } from 'react-redux';\n\nfunction BMICard(props) {\n  const useStyles = makeStyles({\n    root: {\n      width: props.drawerWidth - 20,\n      margin: '10px',\n      display: 'flex',\n    },\n    cardTitle: {\n      fontWeight: 'bold',\n    },\n    equation: {\n      fontStyle: 'italic',\n    },\n    result: {\n      fontWeight: 'bold'\n    },\n  });\n\n  const classes = useStyles();\n\n  const currentPatient = useSelector(state => state.currentPatient);\n  const currentAmputations = useSelector(state => state.currentAmputations);\n\n  const {weightKG, heightCM} = currentPatient;\n  const {gender} = currentPatient;\n\n  function BMIequationString() {\n    const heightM = heightCM / 100;\n    const ampct = Nutrition.AmputatedPercentage(currentAmputations);\n    if (ampct > 0.0) {\n      const estWeightKG = Nutrition.roundTwoDecimal(weightKG / (1 - ampct));\n      return`${estWeightKG} kg / ${heightM}^2`;\n    }\n    return`${weightKG} kg / ${heightM}^2`;\n\n  }\n\n  \n  function IBWequationString() {\n    var ibwStr;\n    if (gender === 'female') {\n      ibwStr = `100 lbs for 5 feet + 5 lbs per inch`;\n\n    } else if (gender ==='male') {\n      ibwStr = `106 lbs for 5 feet + 6 lbs per inch`;\n\n    }\n\n    const ampct = Nutrition.AmputatedPercentage(currentAmputations);\n    if (ampct > 0.0) {\n      const reduceBy = ampct * 100;\n      ibwStr = ibwStr.concat(` - ${reduceBy}% amputated`)\n    }\n\n    return ibwStr;\n  }\n\n\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h6\" className={classes.cardTitle}>BMI</Typography>\n\n        <Typography className={classes.equation}>\n          {BMIequationString()} =\n        </Typography>\n        <Typography className={classes.result}>\n          {Nutrition.calculateBMI(currentPatient, currentAmputations)}\n        </Typography>\n        <Typography variant=\"h6\" className={classes.cardTitle}>IBW</Typography>\n        <Typography className={classes.equation}>\n          {IBWequationString()} =\n        </Typography>\n        <Typography className={classes.result}>\n          {Nutrition.calculateIDW(currentPatient, currentAmputations)}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default BMICard;","import React from 'react';\n\nimport PatientForm from './PatientForm'\nimport MifflinCard from './MifflinCard';\nimport HarrisBenedictCard from './HarrisBenedictCard';\nimport KCalCard from './KCalCard';\nimport TitleBar from './TitleBar';\n\n\nimport {makeStyles} from '@material-ui/styles';\nimport NutritionTable from './NutritionTable';\nimport BMICard from './BMICard';\n\n\n\nfunction App() {\n  const useStyles = makeStyles({\n    root: {\n      display: 'flex',\n    },\n    cardSection: {\n      marginTop: '50px',\n    },\n    tableSection: {\n      marginTop: '50px',\n    },\n  })\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.titleBar}>\n        <TitleBar />\n      </div>\n      <PatientForm />\n      <div className={classes.cardSection}>\n        <BMICard />\n        <MifflinCard />\n        <HarrisBenedictCard />\n        <KCalCard />\n      </div>\n      <div className={classes.tableSection}>\n      <NutritionTable />\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux'\nimport rootReducer from './reducers'\n\nimport App from './components/App';\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}